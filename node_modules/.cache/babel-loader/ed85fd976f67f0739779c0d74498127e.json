{"ast":null,"code":"var _jsxFileName = \"/Users/kristalduran/Documents/Kris/GestionActividades/qevent-client-app/src/components/Events/Events.js\";\n\n/**\n * Filename: HomePage.js\n * Author: email\n * Date: \n * Description: Home page component \n */\nimport React from 'react';\nimport './styles.scss';\nimport background from './../../assets/img/backgroundEvent.png';\nimport Event from '../Event/index';\nimport Footer from '../Footer/index';\nimport Header from '../Header/index';\nimport EventSelected from '../EventSelected/index';\nimport { getEvents, getEvent, getEventFilter } from '../../API/api-calls';\n\nclass Events extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [],\n      eventEdit: null,\n      edit: false,\n      event: null,\n      user: this.props.user\n    };\n  }\n\n  onSelect(data) {\n    if (data !== null) {\n      console.log(data.ID_evento);\n      getEvent(data.ID_evento, response => {\n        if (response.data) {\n          console.log('\\n\\n\\n\\n\\n\\n\\nAQUIIII\\n\\n\\n\\n');\n          console.log(response.data);\n          this.setState({\n            event: response.data.content[0]\n          });\n          console.log(this.state.event);\n        }\n      }, error => {//TODO\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.onGetEvents();\n\n    if (this.props.location) {\n      if (this.props.location.state) {\n        if (this.props.location.state.user) {\n          this.setState({\n            user: this.props.location.state.user\n          });\n\n          if (this.state.user.Rol === 'Client') {\n            this.setState({\n              isCliente: true\n            });\n          }\n        }\n      }\n    }\n  }\n\n  onGetEvents() {\n    getEvents(response => {\n      if (response.data) {\n        this.setState({\n          events: response.data.content\n        });\n      }\n    }, error => {//TODO\n    });\n  }\n\n  onChange(event) {\n    if (event.target.value === '') {\n      this.onGetEvents();\n    } else {\n      getEventFilter(event.target.value, response => {\n        if (response.data) {\n          this.setState({\n            events: response.data.content\n          });\n        }\n      }, error => {//TODO\n      });\n    }\n  }\n\n  render() {\n    return this.state.event ? React.createElement(EventSelected, {\n      event: this.state.event,\n      user: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"events\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"events__info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"events__info__background\",\n      alt: \"Atras\",\n      src: background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"events__info__search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"events__info__search__input\",\n      placeholder: \"Lugar del evento\",\n      onChange: this.onChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"events__info__search__input\",\n      placeholder: \"Fecha del evento\",\n      onChange: this.onChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"events__info__search__input\",\n      placeholder: \"Nombre del evento\",\n      onChange: this.onChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"events__info__search__input\",\n      placeholder: \"Tipo de evento\",\n      onChange: this.onChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"events__info__titule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Eventos\"), React.createElement(\"div\", {\n      className: \"events__info__eventsList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.events.map(event => this.state.isCliente && event.EPublico === 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }) : React.createElement(Event, {\n      event: event,\n      onSelect: this.onSelect.bind(this),\n      admin: false,\n      user: this.state.user,\n      onGetEvents: this.onGetEvents.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })))), React.createElement(Header, {\n      user: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Events;","map":{"version":3,"sources":["/Users/kristalduran/Documents/Kris/GestionActividades/qevent-client-app/src/components/Events/Events.js"],"names":["React","background","Event","Footer","Header","EventSelected","getEvents","getEvent","getEventFilter","Events","Component","constructor","props","state","events","eventEdit","edit","event","user","onSelect","data","console","log","ID_evento","response","setState","content","error","componentDidMount","onGetEvents","location","Rol","isCliente","onChange","target","value","render","bind","map","EPublico"],"mappings":"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","sourcesContent":["/**\n * Filename: HomePage.js\n * Author: email\n * Date: \n * Description: Home page component \n */\nimport React from 'react';\nimport './styles.scss';\n\nimport background from './../../assets/img/backgroundEvent.png';\nimport Event from '../Event/index';\nimport Footer from '../Footer/index';\nimport Header from '../Header/index';\nimport EventSelected from '../EventSelected/index';\nimport { getEvents, getEvent, getEventFilter } from '../../API/api-calls';\n\nclass Events extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      events: [],\n      eventEdit: null,\n      edit:false,\n      event:null,\n      user: this.props.user\n    }\n  }\n\n  onSelect(data){\n    if (data !== null) {\n      console.log(data.ID_evento)\n      getEvent(\n        data.ID_evento,\n        response => {\n          if (response.data) {\n            console.log('\\n\\n\\n\\n\\n\\n\\nAQUIIII\\n\\n\\n\\n')\n            console.log(response.data)\n            this.setState({event:response.data.content[0]});\n            console.log(this.state.event)\n          }\n        },\n        error => {\n          //TODO\n        }\n      );\n    }\n  }\n\ncomponentDidMount(){\n  this.onGetEvents();\n  if (this.props.location) {\n    if (this.props.location.state) {\n      if (this.props.location.state.user) {\n        this.setState({user:this.props.location.state.user})\n        if (this.state.user.Rol === 'Client') {\n          this.setState({isCliente:true})\n        }\n      }\n    } \n  }\n}\n\n  onGetEvents(){\n    getEvents(\n      response => {\n        if (response.data) {\n          this.setState({events:response.data.content});\n        }\n      },\n      error => {\n        //TODO\n      }\n    );\n  }\n\n  onChange(event){\n    if (event.target.value === '') {\n      this.onGetEvents();\n    }else{\n      getEventFilter(\n        event.target.value,\n        response => {\n          if (response.data) {\n            this.setState({events:response.data.content});\n          }\n        },\n        error => {\n          //TODO\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      this.state.event ? (\n        <EventSelected event={this.state.event} user={this.state.user}></EventSelected>\n      ) : (\n      <div className=\"events\">\n        <div className=\"events__info\">\n          <img className=\"events__info__background\" alt='Atras' src={background}/>\n          <div className=\"events__info__search\">\n            <input className=\"events__info__search__input\" placeholder='Lugar del evento' onChange={this.onChange.bind(this)}></input>\n            <input className=\"events__info__search__input\" placeholder='Fecha del evento' onChange={this.onChange.bind(this)}></input>\n            <input className=\"events__info__search__input\" placeholder='Nombre del evento' onChange={this.onChange.bind(this)}></input>\n            <input className=\"events__info__search__input\" placeholder='Tipo de evento' onChange={this.onChange.bind(this)}></input>\n          </div>\n          <p className=\"events__info__titule\">Eventos</p>\n          <div className=\"events__info__eventsList\">\n            {this.state.events.map((event) => (\n              this.state.isCliente && event.EPublico === 0 ?\n              (<div></div>):\n              (<Event event={event} onSelect={this.onSelect.bind(this)} admin={false} user={this.state.user} onGetEvents={this.onGetEvents.bind(this)}></Event>)\n              \n            ))}\n          </div>\n        </div>\n        <Header user={this.state.user}></Header>\n        <Footer></Footer>\n      </div>\n        \n      )\n    )\n  }\n}\n\nexport default (Events);"]},"metadata":{},"sourceType":"module"}